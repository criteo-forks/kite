From a3c2e4d4d61421865cf9565520e379fd41819c6e Mon Sep 17 00:00:00 2001
From: Ryan Blue <blue@apache.org>
Date: Fri, 7 Aug 2015 11:18:12 -0700
Subject: [PATCH 029/140] CLOUDERA-BUILD. Add more records to copy and
 transform tests.

Upstream Crunch changed its partitioning function to be more random,
which resulted in not covering all expected partitions with a small
number of records (before this was guarnanteed). The fix is to increase
the number of records in the test.
---
 .../cli/commands/TestCopyCommandCluster.java       |   33 +++++++++++++++-----
 .../cli/commands/TestTransformCommandCluster.java  |   30 ++++++++++++------
 2 files changed, 46 insertions(+), 17 deletions(-)

diff --git a/kite-tools-parent/kite-tools/src/test/java/org/kitesdk/cli/commands/TestCopyCommandCluster.java b/kite-tools-parent/kite-tools/src/test/java/org/kitesdk/cli/commands/TestCopyCommandCluster.java
index 1fe7378..57e4906 100644
--- a/kite-tools-parent/kite-tools/src/test/java/org/kitesdk/cli/commands/TestCopyCommandCluster.java
+++ b/kite-tools-parent/kite-tools/src/test/java/org/kitesdk/cli/commands/TestCopyCommandCluster.java
@@ -22,6 +22,8 @@ import com.google.common.io.Files;
 import java.io.BufferedWriter;
 import java.io.File;
 import java.net.URI;
+import java.util.ArrayList;
+import java.util.List;
 import java.util.Map;
 import java.util.Set;
 import java.util.regex.Pattern;
@@ -29,6 +31,7 @@ import org.apache.avro.SchemaBuilder;
 import org.apache.avro.generic.GenericData;
 import org.apache.avro.generic.GenericRecord;
 import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.fs.Path;
 import org.apache.hadoop.mapred.LocalJobRunner;
 import org.apache.hadoop.mapreduce.Job;
 import org.junit.After;
@@ -64,6 +67,7 @@ public class TestCopyCommandCluster extends MiniDFSTest {
   private static final String avsc = "target/user.avsc";
   private static final Pattern UPPER_CASE = Pattern.compile("^[A-Z]+\\d*$");
   private static String repoUri;
+  private static int numRecords;
 
   @BeforeClass
   public static void createSourceDataset() throws Exception {
@@ -80,8 +84,19 @@ public class TestCopyCommandCluster extends MiniDFSTest {
     writer.append("4,user4,user4@example.com\n");
     writer.append("5,user5,user5@example.com\n");
     writer.append("6,user6,user6@example.com\n");
+    writer.append("7,user7,user7@example.com\n");
+    writer.append("8,user8,user8@example.com\n");
+    writer.append("9,user9,user9@example.com\n");
+    writer.append("10,user10,user10@example.com\n");
+    writer.append("11,user11,user11@example.com\n");
+    writer.append("12,user12,user12@example.com\n");
+    writer.append("13,user13,user13@example.com\n");
+    writer.append("14,user14,user14@example.com\n");
     writer.close();
 
+    // keep this in sync with the number of lines above
+    numRecords = 14;
+
     TestUtil.run("-v", "csv-schema", csv, "-o", avsc, "--class", "User");
     TestUtil.run("create", source, "-s", avsc,
         "-r", repoUri, "-d", "target/data");
@@ -120,9 +135,9 @@ public class TestCopyCommandCluster extends MiniDFSTest {
 
     DatasetRepository repo = DatasetRepositories.repositoryFor("repo:" + repoUri);
     int size = DatasetTestUtilities.datasetSize(repo.load("default", dest));
-    Assert.assertEquals("Should contain copied records", 6, size);
+    Assert.assertEquals("Should contain copied records", numRecords, size);
 
-    verify(console).info("Added {} records to \"{}\"", 6l, dest);
+    verify(console).info("Added {} records to \"{}\"", (long) numRecords, dest);
     verifyNoMoreInteractions(console);
   }
 
@@ -140,12 +155,12 @@ public class TestCopyCommandCluster extends MiniDFSTest {
         (FileSystemDataset<GenericData.Record>) repo.<GenericData.Record>
             load("default", dest);
     int size = DatasetTestUtilities.datasetSize(ds);
-    Assert.assertEquals("Should contain copied records", 6, size);
+    Assert.assertEquals("Should contain copied records", numRecords, size);
 
     Assert.assertEquals("Should produce 1 files",
         1, Iterators.size(ds.pathIterator()));
 
-    verify(console).info("Added {} records to \"{}\"", 6l, dest);
+    verify(console).info("Added {} records to \"{}\"", (long) numRecords, dest);
     verifyNoMoreInteractions(console);
   }
 
@@ -166,12 +181,14 @@ public class TestCopyCommandCluster extends MiniDFSTest {
         (FileSystemDataset<GenericData.Record>) repo.<GenericData.Record>
             load("default", dest);
     int size = DatasetTestUtilities.datasetSize(ds);
-    Assert.assertEquals("Should contain copied records", 6, size);
+    Assert.assertEquals("Should contain copied records", numRecords, size);
 
+    List<Path> paths = new ArrayList<Path>();
+    Iterators.addAll(paths, ds.pathIterator());
     Assert.assertEquals("Should produce 3 files",
         3, Iterators.size(ds.pathIterator()));
 
-    verify(console).info("Added {} records to \"{}\"", 6l, dest);
+    verify(console).info("Added {} records to \"{}\"", (long) numRecords, dest);
     verifyNoMoreInteractions(console);
   }
 
@@ -221,12 +238,12 @@ public class TestCopyCommandCluster extends MiniDFSTest {
         (FileSystemDataset<GenericData.Record>) repo.<GenericData.Record>
             load("default", "dest_partitioned");
     int size = DatasetTestUtilities.datasetSize(ds);
-    Assert.assertEquals("Should contain copied records", 6, size);
+    Assert.assertEquals("Should contain copied records", numRecords, size);
 
     Assert.assertEquals("Should produce 2 partitions",
         2, Iterators.size(ds.pathIterator()));
 
-    verify(console).info("Added {} records to \"{}\"", 6l, "dest_partitioned");
+    verify(console).info("Added {} records to \"{}\"", (long) numRecords, "dest_partitioned");
     verifyNoMoreInteractions(console);
   }
 
diff --git a/kite-tools-parent/kite-tools/src/test/java/org/kitesdk/cli/commands/TestTransformCommandCluster.java b/kite-tools-parent/kite-tools/src/test/java/org/kitesdk/cli/commands/TestTransformCommandCluster.java
index 0ce744a..708ded3 100644
--- a/kite-tools-parent/kite-tools/src/test/java/org/kitesdk/cli/commands/TestTransformCommandCluster.java
+++ b/kite-tools-parent/kite-tools/src/test/java/org/kitesdk/cli/commands/TestTransformCommandCluster.java
@@ -64,6 +64,7 @@ public class TestTransformCommandCluster extends MiniDFSTest {
   private static final String avsc = "target/user.avsc";
   private static final Pattern UPPER_CASE = Pattern.compile("^[A-Z]+\\d*$");
   private static String repoUri;
+  private static int numRecords;
 
   @BeforeClass
   public static void createSourceDataset() throws Exception {
@@ -80,8 +81,19 @@ public class TestTransformCommandCluster extends MiniDFSTest {
     writer.append("4,user4,user4@example.com\n");
     writer.append("5,user5,user5@example.com\n");
     writer.append("6,user6,user6@example.com\n");
+    writer.append("7,user7,user7@example.com\n");
+    writer.append("8,user8,user8@example.com\n");
+    writer.append("9,user9,user9@example.com\n");
+    writer.append("10,user10,user10@example.com\n");
+    writer.append("11,user11,user11@example.com\n");
+    writer.append("12,user12,user12@example.com\n");
+    writer.append("13,user13,user13@example.com\n");
+    writer.append("14,user14,user14@example.com\n");
     writer.close();
 
+    // keep this in sync with the number of lines above
+    numRecords = 14;
+
     TestUtil.run("-v", "csv-schema", csv, "-o", avsc, "--class", "User");
     TestUtil.run("create", source, "-s", avsc,
         "-r", repoUri, "-d", "target/data");
@@ -120,9 +132,9 @@ public class TestTransformCommandCluster extends MiniDFSTest {
 
     DatasetRepository repo = DatasetRepositories.repositoryFor("repo:" + repoUri);
     int size = DatasetTestUtilities.datasetSize(repo.load("default", dest));
-    Assert.assertEquals("Should contain copied records", 6, size);
+    Assert.assertEquals("Should contain copied records", numRecords, size);
 
-    verify(console).info("Added {} records to \"{}\"", 6l, dest);
+    verify(console).info("Added {} records to \"{}\"", (long) numRecords, dest);
     verifyNoMoreInteractions(console);
   }
 
@@ -138,7 +150,7 @@ public class TestTransformCommandCluster extends MiniDFSTest {
     DatasetRepository repo = DatasetRepositories.repositoryFor("repo:" + repoUri);
     Set<GenericRecord> records = DatasetTestUtilities.materialize(
         repo.<GenericRecord>load("default", dest));
-    Assert.assertEquals("Should contain copied records", 6, records.size());
+    Assert.assertEquals("Should contain copied records", numRecords, records.size());
     for (GenericRecord record : records) {
       Assert.assertTrue("Username should be upper case",
           UPPER_CASE.matcher(record.get("username").toString()).matches());
@@ -159,12 +171,12 @@ public class TestTransformCommandCluster extends MiniDFSTest {
         (FileSystemDataset<GenericData.Record>) repo.<GenericData.Record>
             load("default", dest);
     int size = DatasetTestUtilities.datasetSize(ds);
-    Assert.assertEquals("Should contain copied records", 6, size);
+    Assert.assertEquals("Should contain copied records", numRecords, size);
 
     Assert.assertEquals("Should produce 1 files",
         1, Iterators.size(ds.pathIterator()));
 
-    verify(console).info("Added {} records to \"{}\"", 6l, dest);
+    verify(console).info("Added {} records to \"{}\"", (long) numRecords, dest);
     verifyNoMoreInteractions(console);
   }
 
@@ -185,12 +197,12 @@ public class TestTransformCommandCluster extends MiniDFSTest {
         (FileSystemDataset<GenericData.Record>) repo.<GenericData.Record>
             load("default", dest);
     int size = DatasetTestUtilities.datasetSize(ds);
-    Assert.assertEquals("Should contain copied records", 6, size);
+    Assert.assertEquals("Should contain copied records", numRecords, size);
 
     Assert.assertEquals("Should produce 3 files",
         3, Iterators.size(ds.pathIterator()));
 
-    verify(console).info("Added {} records to \"{}\"", 6l, dest);
+    verify(console).info("Added {} records to \"{}\"", (long) numRecords, dest);
     verifyNoMoreInteractions(console);
   }
 
@@ -240,12 +252,12 @@ public class TestTransformCommandCluster extends MiniDFSTest {
         (FileSystemDataset<GenericData.Record>) repo.<GenericData.Record>
             load("default", "dest_partitioned");
     int size = DatasetTestUtilities.datasetSize(ds);
-    Assert.assertEquals("Should contain copied records", 6, size);
+    Assert.assertEquals("Should contain copied records", numRecords, size);
 
     Assert.assertEquals("Should produce 2 partitions",
         2, Iterators.size(ds.pathIterator()));
 
-    verify(console).info("Added {} records to \"{}\"", 6l, "dest_partitioned");
+    verify(console).info("Added {} records to \"{}\"", (long) numRecords, "dest_partitioned");
     verifyNoMoreInteractions(console);
   }
 
-- 
1.7.9.5


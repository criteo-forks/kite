From 6ce2ab6390eda229c41918dc0d9b800f22fc3272 Mon Sep 17 00:00:00 2001
From: Adrian Kalaszi <akalaszi@cloudera.com>
Date: Sun, 21 Feb 2016 23:11:49 +0100
Subject: [PATCH 128/140] KITE-1114: Kite CLI json-import HDFS temp file path
 not multiuser safe

---
 .../TestTemporaryFileSystemDatasetRepository.java  |   45 ++++++++++++++++++++
 .../kitesdk/cli/commands/JSONImportCommand.java    |    2 +-
 2 files changed, 46 insertions(+), 1 deletion(-)
 create mode 100644 kite-data/kite-data-core/src/test/java/org/kitesdk/data/spi/filesystem/TestTemporaryFileSystemDatasetRepository.java

diff --git a/kite-data/kite-data-core/src/test/java/org/kitesdk/data/spi/filesystem/TestTemporaryFileSystemDatasetRepository.java b/kite-data/kite-data-core/src/test/java/org/kitesdk/data/spi/filesystem/TestTemporaryFileSystemDatasetRepository.java
new file mode 100644
index 0000000..d90e4c7
--- /dev/null
+++ b/kite-data/kite-data-core/src/test/java/org/kitesdk/data/spi/filesystem/TestTemporaryFileSystemDatasetRepository.java
@@ -0,0 +1,45 @@
+package org.kitesdk.data.spi.filesystem;
+
+import java.io.IOException;
+import java.net.URI;
+
+import org.apache.avro.generic.GenericData.Record;
+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.fs.Path;
+import org.junit.Assert;
+import org.junit.Test;
+import org.kitesdk.data.Dataset;
+import org.kitesdk.data.TestDatasetRepositories;
+import org.kitesdk.data.spi.DatasetRepository;
+import org.kitesdk.data.spi.MetadataProvider;
+
+public class TestTemporaryFileSystemDatasetRepository
+    extends TestDatasetRepositories {
+
+  public TestTemporaryFileSystemDatasetRepository(boolean distributed) {
+    super(distributed);
+  }
+
+  public static String KEY = "key";
+
+  @Test
+  public void verifyIfRequiredTmpFileSystemDatasetRepositoryHasBeenCreated()
+      throws IOException {
+
+    Dataset<Record> created = repo.create(NAMESPACE, NAME, testDescriptor);
+    URI location = created.getDescriptor().getLocation();
+    System.err.println(location);
+    Assert.assertNotNull(
+        "FileSystemDatasetRepository should return descriptor locations",
+        location);
+    Assert.assertTrue("Dataset data directory:" + location + " should exist",
+        fileSystem.exists(new Path(location)));
+
+  }
+
+  @Override
+  public DatasetRepository newRepo(MetadataProvider provider) {
+    return new TemporaryFileSystemDatasetRepository(new Configuration(),
+        testDirectory, NAMESPACE, KEY);
+  }
+}
diff --git a/kite-tools-parent/kite-tools/src/main/java/org/kitesdk/cli/commands/JSONImportCommand.java b/kite-tools-parent/kite-tools/src/main/java/org/kitesdk/cli/commands/JSONImportCommand.java
index c0c5eee..5847526 100644
--- a/kite-tools-parent/kite-tools/src/main/java/org/kitesdk/cli/commands/JSONImportCommand.java
+++ b/kite-tools-parent/kite-tools/src/main/java/org/kitesdk/cli/commands/JSONImportCommand.java
@@ -106,7 +106,7 @@ public class JSONImportCommand extends BaseDatasetCommand {
     TemporaryFileSystemDatasetRepository repo =
         new TemporaryFileSystemDatasetRepository(getConf(),
             // ensure the same FS as the file source is used
-            sourceFS.makeQualified(new Path("/tmp")),
+            sourceFS.makeQualified(new Path("/tmp/" + UUID.randomUUID().toString())),
             target.getDataset().getNamespace(),
             UUID.randomUUID().toString());
 
-- 
1.7.9.5


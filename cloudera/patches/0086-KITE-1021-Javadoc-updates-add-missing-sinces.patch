From 133a4044eb11f635609f40a411affce263b96dad Mon Sep 17 00:00:00 2001
From: Ryan Blue <blue@apache.org>
Date: Mon, 15 Jun 2015 17:53:41 -0700
Subject: [PATCH 086/140] KITE-1021: Javadoc updates, add missing sinces.

---
 .../java/org/kitesdk/data/PartitionStrategy.java   |    2 ++
 .../src/main/java/org/kitesdk/data/Signalable.java |    2 ++
 .../src/main/java/org/kitesdk/data/View.java       |    4 +++
 .../data/mapreduce/DatasetKeyInputFormat.java      |   15 +++++++++
 .../data/mapreduce/DatasetKeyOutputFormat.java     |    1 -
 .../main/java/org/kitesdk/tools/TransformTask.java |   35 +++++++++++++++++---
 6 files changed, 54 insertions(+), 5 deletions(-)

diff --git a/kite-data/kite-data-core/src/main/java/org/kitesdk/data/PartitionStrategy.java b/kite-data/kite-data-core/src/main/java/org/kitesdk/data/PartitionStrategy.java
index 1e9aea0..eb08785 100644
--- a/kite-data/kite-data-core/src/main/java/org/kitesdk/data/PartitionStrategy.java
+++ b/kite-data/kite-data-core/src/main/java/org/kitesdk/data/PartitionStrategy.java
@@ -383,6 +383,7 @@ public class PartitionStrategy {
      *          The size of the range.
      * @return An instance of the builder for method chaining.
      * @see IntRangeFieldPartitioner
+     * @since 1.1.0
      */
     public Builder fixedSizeRange(String sourceName, long size) {
       add(new LongFixedSizeRangeFieldPartitioner(sourceName, size));
@@ -406,6 +407,7 @@ public class PartitionStrategy {
      *          The size of the range.
      * @return An instance of the builder for method chaining.
      * @see IntRangeFieldPartitioner
+     * @since 1.1.0
      */
     public Builder fixedSizeRange(String sourceName, @Nullable String name, long size) {
       add(new LongFixedSizeRangeFieldPartitioner(sourceName, name, size));
diff --git a/kite-data/kite-data-core/src/main/java/org/kitesdk/data/Signalable.java b/kite-data/kite-data-core/src/main/java/org/kitesdk/data/Signalable.java
index 3f8351f..ad2e644 100644
--- a/kite-data/kite-data-core/src/main/java/org/kitesdk/data/Signalable.java
+++ b/kite-data/kite-data-core/src/main/java/org/kitesdk/data/Signalable.java
@@ -18,6 +18,8 @@ package org.kitesdk.data;
 /**
  * Signalable views may signal consumers when their underlying data is ready for
  * consumption. Not all View implementations provide this capability.
+ *
+ * @since 1.1.0
  */
 public interface Signalable<E> extends View<E> {
 
diff --git a/kite-data/kite-data-core/src/main/java/org/kitesdk/data/View.java b/kite-data/kite-data-core/src/main/java/org/kitesdk/data/View.java
index 5cd5b88..ef261d6 100644
--- a/kite-data/kite-data-core/src/main/java/org/kitesdk/data/View.java
+++ b/kite-data/kite-data-core/src/main/java/org/kitesdk/data/View.java
@@ -175,6 +175,8 @@ public interface View<E> {
    * @throws IncompatibleSchemaException
    *          If the given {@code schema} is incompatible with the underlying
    *          dataset.
+   *
+   * @since 1.1.0
    */
   View<GenericRecord> asSchema(Schema schema);
 
@@ -188,6 +190,8 @@ public interface View<E> {
    * @throws IncompatibleSchemaException
    *          If the given {@code type} is incompatible with the underlying
    *          dataset.
+   *
+   * @since 1.1.0
    */
   <T> View<T> asType(Class<T> type);
 }
diff --git a/kite-data/kite-data-mapreduce/src/main/java/org/kitesdk/data/mapreduce/DatasetKeyInputFormat.java b/kite-data/kite-data-mapreduce/src/main/java/org/kitesdk/data/mapreduce/DatasetKeyInputFormat.java
index fbc98c4..1ed5303 100644
--- a/kite-data/kite-data-mapreduce/src/main/java/org/kitesdk/data/mapreduce/DatasetKeyInputFormat.java
+++ b/kite-data/kite-data-mapreduce/src/main/java/org/kitesdk/data/mapreduce/DatasetKeyInputFormat.java
@@ -145,6 +145,11 @@ public class DatasetKeyInputFormat<E> extends InputFormat<E, Void>
      * This Class is used to configure the input {@code Dataset}. If this class
      * cannot be found during job setup, the job will fail and throw a
      * {@link org.kitesdk.data.TypeNotFoundException}.
+     * <p>
+     * If the type is set, then the type's schema is used for the expected
+     * schema and {@link #withSchema(Schema)} should not be called. This may,
+     * however, be used at the same time if the type is a generic record
+     * subclass.
      *
      * @param type the entity Class that will be produced
      * @return this for method chaining
@@ -160,6 +165,16 @@ public class DatasetKeyInputFormat<E> extends InputFormat<E, Void>
       return this;
     }
 
+    /**
+     * Sets the expected schema to use when reading records from the Dataset.
+     * <p>
+     * If this schema is set, {@link #withType(Class)} should only be called
+     * with a generic record subclass.
+     *
+     * @param readerSchema the expected entity schema
+     * @return this for method chaining
+     * @since 1.1.0
+     */
     public ConfigBuilder withSchema(Schema readerSchema) {
       Class<?> type = conf.getClass(KITE_TYPE, null);
       Preconditions.checkArgument(
diff --git a/kite-data/kite-data-mapreduce/src/main/java/org/kitesdk/data/mapreduce/DatasetKeyOutputFormat.java b/kite-data/kite-data-mapreduce/src/main/java/org/kitesdk/data/mapreduce/DatasetKeyOutputFormat.java
index 1bcb201..b20a4bb 100644
--- a/kite-data/kite-data-mapreduce/src/main/java/org/kitesdk/data/mapreduce/DatasetKeyOutputFormat.java
+++ b/kite-data/kite-data-mapreduce/src/main/java/org/kitesdk/data/mapreduce/DatasetKeyOutputFormat.java
@@ -39,7 +39,6 @@ import org.kitesdk.data.Datasets;
 import org.kitesdk.data.PartitionStrategy;
 import org.kitesdk.data.Signalable;
 import org.kitesdk.data.TypeNotFoundException;
-import org.kitesdk.data.ValidationException;
 import org.kitesdk.data.View;
 import org.kitesdk.data.spi.AbstractDataset;
 import org.kitesdk.data.spi.Compatibility;
diff --git a/kite-tools-parent/kite-tools/src/main/java/org/kitesdk/tools/TransformTask.java b/kite-tools-parent/kite-tools/src/main/java/org/kitesdk/tools/TransformTask.java
index ed78801..8da5326 100644
--- a/kite-tools-parent/kite-tools/src/main/java/org/kitesdk/tools/TransformTask.java
+++ b/kite-tools-parent/kite-tools/src/main/java/org/kitesdk/tools/TransformTask.java
@@ -84,6 +84,12 @@ public class TransformTask<S, T> extends Configured {
     return count;
   }
 
+  /**
+   * Do not shuffle data to writers to minimize the number of files. Write from
+   * each read task.
+   *
+   * @return this for method chaining
+   */
   public TransformTask noCompaction() {
     this.compact = false;
     this.numWriters = 0;
@@ -91,6 +97,14 @@ public class TransformTask<S, T> extends Configured {
     return this;
   }
 
+  /**
+   * Set the number of concurrent writer processes.
+   * <p>
+   * If set to 0, this disables compaction.
+   *
+   * @param numWriters the number of concurrent writer processes
+   * @return this for method chaining
+   */
   public TransformTask setNumWriters(int numWriters) {
     Preconditions.checkArgument(numWriters >= 0,
         "Invalid number of reducers: " + numWriters);
@@ -102,13 +116,26 @@ public class TransformTask<S, T> extends Configured {
     return this;
   }
 
-  public TransformTask setFilesPerPartition(int numPartitionWriters) {
-    Preconditions.checkArgument(numPartitionWriters > 0,
-        "Invalid number of partition writers: " + numPartitionWriters);
-    this.numPartitionWriters = numPartitionWriters;
+  /**
+   * Set the number of files to create in each output partition.
+   *
+   * @param filesPerPartition a target number of files per output partition
+   * @return this for method chaining
+   * @since 1.1.0
+   */
+  public TransformTask setFilesPerPartition(int filesPerPartition) {
+    Preconditions.checkArgument(filesPerPartition > 0,
+        "Invalid number of files per partition: " + filesPerPartition);
+    this.numPartitionWriters = filesPerPartition;
     return this;
   }
 
+  /**
+   * Set the output write mode: default, overwrite, or append.
+   *
+   * @param mode the output write mode
+   * @return this for method chaining
+   */
   public TransformTask setWriteMode(Target.WriteMode mode) {
     Preconditions.checkArgument(mode != Target.WriteMode.CHECKPOINT,
         "Checkpoint is not an allowed write mode");
-- 
1.7.9.5

